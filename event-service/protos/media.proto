syntax = "proto3";

package media;

// Media Service definition
service MediaService {
  // Get authentication parameters for ImageKit
  rpc GetUploadAuth(GetUploadAuthRequest) returns (GetUploadAuthResponse);

  // Get file details by file ID
  rpc GetFileDetails(GetFileDetailsRequest) returns (GetFileDetailsResponse);

  // Get list of files with optional filters
  rpc GetFiles(GetFilesRequest) returns (GetFilesResponse);

  // Delete a single file
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);

  // Delete multiple files
  rpc DeleteMultipleFiles(DeleteMultipleFilesRequest)
      returns (DeleteMultipleFilesResponse);

  // Upload file
  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);

  // Update file details
  rpc UpdateFileDetails(UpdateFileDetailsRequest)
      returns (UpdateFileDetailsResponse);
}

// Request/Response messages
message GetUploadAuthRequest {}

message GetUploadAuthResponse {
  string token = 1;
  int64 expire = 2;
  string signature = 3;
  bool success = 4;
  string error_message = 5;
}

message GetFileDetailsRequest { string file_id = 1; }

message GetFileDetailsResponse {
  FileDetails file = 1;
  bool success = 2;
  string error_message = 3;
}

message GetFilesRequest {
  int32 skip = 1;
  int32 limit = 2;
  string search_query = 3;
  repeated string tags = 4;
  string file_type = 5;
  string sort = 6;
  string path = 7;
}

message GetFilesResponse {
  repeated FileDetails files = 1;
  bool success = 2;
  string error_message = 3;
  int32 total_count = 4;
}

message DeleteFileRequest { string file_id = 1; }

message DeleteFileResponse {
  bool success = 1;
  string error_message = 2;
}

message DeleteMultipleFilesRequest { repeated string file_ids = 1; }

message DeleteMultipleFilesResponse {
  repeated DeleteResult results = 1;
  bool all_success = 2;
  string error_message = 3;
}

message UploadFileRequest {
  bytes file_data = 1;
  string filename = 2;
  string folder = 3;
  repeated string tags = 4;
  bool use_unique_filename = 5;
  string custom_coordinates = 6;
}

message UploadFileResponse {
  FileDetails file = 1;
  bool success = 2;
  string error_message = 3;
}

message UpdateFileDetailsRequest {
  string file_id = 1;
  repeated string tags = 2;
  string custom_coordinates = 3;
  map<string, string> custom_metadata = 4;
}

message UpdateFileDetailsResponse {
  FileDetails file = 1;
  bool success = 2;
  string error_message = 3;
}

// Data models
message FileDetails {
  string file_id = 1;
  string name = 2;
  string url = 3;
  string thumbnail_url = 4;
  int64 size = 5;
  string file_type = 6;
  repeated string tags = 7;
  string folder_path = 8;
  string created_at = 9;
  string updated_at = 10;
  int32 width = 11;
  int32 height = 12;
  map<string, string> custom_metadata = 13;
}

message DeleteResult {
  string file_id = 1;
  bool success = 2;
  string error_message = 3;
}